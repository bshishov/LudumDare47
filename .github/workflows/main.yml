name: Unity Build

on:
  pull_request: {}
  push: { branches: [master] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  buildAndTestForSomePlatforms:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          #- StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          #- StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- iOS # Build an iOS player.
          - WebGL # WebGL.        
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Activate Unity
        uses: webbertakken/unity-activate@v1.3
        with:
          unityVersion: ${{ matrix.unityVersion }}
      - uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
      # - uses: webbertakken/unity-test-runner@v1.3
      #   id: testRunner
      #   with:
      #     projectPath: ${{ matrix.projectPath }}
      #     unityVersion: ${{ matrix.unityVersion }}
      # - uses: actions/upload-artifact@v1
      #   with:
      #     name: Test results (all modes)
      #     path: ${{ steps.testRunner.outputs.artifactsPath }}
      - uses: webbertakken/unity-builder@v1.4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: UnityGame
          unityVersion: 2020.1.7f1
          targetPlatform: ${{ matrix.targetPlatform }}
          #customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'
      - uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build